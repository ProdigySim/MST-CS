//////////////////////////////////////////////////////////////////////
/// @file exception.h
/// @author Michael Busby CS153 1B
/// @brief Declarations and definitions for exception class
////////////////////////////////////////////////////////////////////// 
#ifndef EXCEPTION_H
#define EXCEPTION_H

#include <string>


//////////////////////////////////////////////////////////////////////
/// @class exception
/// @brief stores exceptions in an easily retrievable manner
////////////////////////////////////////////////////////////////////// 
//////////////////////////////////////////////////////////////////////
/// @fn exception::exception()
/// @brief initializes class/message variable
/// @param std::string of error description
////////////////////////////////////////////////////////////////////// 
//////////////////////////////////////////////////////////////////////
/// @fn exception::~exception()
/// @brief deinitializes exception variables
////////////////////////////////////////////////////////////////////// 
//////////////////////////////////////////////////////////////////////
/// @fn exception::get_message
/// @brief Gets the exception message
/// @return std::string of exception message
////////////////////////////////////////////////////////////////////// 
class exception
{
    private:
        std::string m_msg; ///< holds exception message
    
    public:
        exception( const std::string &msg ) : m_msg(msg) {}
        ~exception() {}
        std::string get_message() const { return m_msg; }    
};

#include "exception.hpp"

#endif
